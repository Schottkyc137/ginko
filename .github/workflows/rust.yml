name: Rust

on:
  push:
    branches: [ "master" ]
    tags:
      - "v*"
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  check:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --verbose
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Format
        run: cargo fmt -- --check

  build-targets:
    needs:
      - check
    strategy:
      matrix:
        crate:
          - ginko
          - ginko_ls
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          - aarch64-apple-darwin
        rust:
          - stable

        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: ""
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            ext: .exe
          - target: aarch64-apple-darwin
            os: macos-latest
            ext: ""

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup toolchain
        if: matrix.os == 'macos-latest'
        run: rustup target add aarch64-apple-darwin

      - name: Build
        run: cargo build --manifest-path ${{ matrix.crate }}/Cargo.toml --release --target ${{ matrix.target }}

      - name: Test
        if: matrix.os != 'macos-latest' # There are no free runners for Apple Silicon available at the moment
        run: cargo test --verbose --manifest-path ${{ matrix.crate }}/Cargo.toml --target ${{ matrix.target }}

      - name: Assemble
        if: matrix.rust == 'stable'
        run: |
          mkdir ${{ matrix.crate }}-${{ matrix.target }}
          mkdir ${{ matrix.crate }}-${{ matrix.target }}/bin
          cp target/${{ matrix.target }}/release/${{ matrix.crate }}${{ matrix.ext }} ${{ matrix.crate }}-${{ matrix.target }}/bin

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.crate }}-${{ matrix.target }}
          path: ${{ matrix.crate }}-${{ matrix.target }}

  release:
    permissions: write-all
    name: Release
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build-targets

    steps:
      - name: Get version
        id: v
        run: |
          echo "v=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
          echo "Version is v${GITHUB_REF/refs\/tags\/v/}"
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ginko*
          path: ~/temp
      - name: Check ginko version
        run: |
          chmod u+x ~/temp/ginko-x86_64-unknown-linux-gnu/bin/ginko
          version_string=$(~/temp/ginko-x86_64-unknown-linux-gnu/bin/ginko --version)
          if [ "$version_string" != "ginko $v" ]
          then
            echo "Version string mismatch (\"$version_string\" != \"ginko $v\""
            exit 1
          else
            echo "Version string matched"
          fi
      - name: Check ginko_ls version
        run: |
          chmod u+x ~/temp/ginko_ls-x86_64-unknown-linux-gnu/bin/ginko_ls
          version_string=$(~/temp/ginko_ls-x86_64-unknown-linux-gnu/bin/ginko_ls --version)
          if [ "$version_string" != "ginko_ls $v" ]
          then
            echo "Version string mismatch (\"$version_string\" != \"ginko $v\""
            exit 1
          else
            echo "Version string matched"
          fi
      - name: Zip artifacts
        run: |
          cd ~/temp
          chmod +x */bin/ginko*
          zip -r ginko-x86_64-unknown-linux-gnu.zip ginko-x86_64-unknown-linux-gnu
          zip -r ginko_ls-x86_64-unknown-linux-gnu.zip ginko_ls-x86_64-unknown-linux-gnu
          zip -r ginko-x86_64-pc-windows-msvc.zip ginko-x86_64-pc-windows-msvc
          zip -r ginko_ls-x86_64-pc-windows-msvc.zip ginko_ls-x86_64-pc-windows-msvc
          zip -r ginko-aarch64-apple-darwin.zip ginko-aarch64-apple-darwin
          zip -r ginko_ls-aarch64-apple-darwin.zip ginko_ls-aarch64-apple-darwin
      - name: Do release
        uses: ncipollo/release-action@v1
        with:
          draft: false
          artifacts: "~/temp/*.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
