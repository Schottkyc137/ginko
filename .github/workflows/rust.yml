name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Format
        run: cargo fmt -- --check

  build-targets:
    strategy:
      matrix:
        crate:
          - ginko
          - ginko_ls
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
          - aarch64-apple-darwin
        rust:
          - stable

        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: ""
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            ext: .exe
          - target: aarch64-apple-darwin
            os: macos-latest
            ext: ""

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: cargo build --manifest-path ${{ matrix.crate }}/Cargo.toml --release --target ${{ matrix.target }}

      - name: Assemble
        if: matrix.rust == 'stable'
        run: |
          mkdir ${{ matrix.crate }}-${{ matrix.target }}
          mkdir ${{ matrix.crate }}-${{ matrix.target }}/bin
          cp target/${{ matrix.target }}/release/${{ matrix.crate }}${{ matrix.ext }} ${{ matrix.crate }}-${{ matrix.target }}/bin

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.crate }}-${{ matrix.target }}
          path: ${{ matrix.crate }}-${{ matrix.target }}
